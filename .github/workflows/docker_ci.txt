      
      - name: Write .env file from GitHub secrets
        run: |
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env
          echo "PGPASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env
          echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> .env
          echo "PGDATABASE=${{ secrets.POSTGRES_DB }}" >> .env
          echo "POSTGRES_HOST=${{ secrets.POSTGRES_HOST }}" >> .env
          echo "POSTGRES_PORT=${{ secrets.POSTGRES_PORT }}" >> .env
          echo "DASHBOARD_USERNAME=${{ secrets.DASHBOARD_USERNAME }}" >> .env
          echo "DASHBOARD_PASSWORD=${{ secrets.DASHBOARD_PASSWORD }}" >> .env
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env
          echo "ANON_KEY=${{ secrets.ANON_KEY }}" >> .env
          echo "SERVICE_ROLE_KEY=${{ secrets.SERVICE_ROLE_KEY }}" >> .env
          echo "LOGFLARE_LOGGER_BACKEND_API_KEY=${{ secrets.LOGFLARE_LOGGER_BACKEND_API_KEY }}" >> .env
          echo "LOGFLARE_API_KEY=${{ secrets.LOGFLARE_API_KEY }}" >> .env
          echo "DOCKER_SOCKET_LOCATION=/var/run/docker.sock" >> .env
          echo "POOLER_PROXY_PORT_TRANSACTION=${{ secrets.POOLER_PROXY_PORT_TRANSACTION }}" >> .env
          echo "POOLER_DEFAULT_POOL_SIZE=${{ secrets.POOLER_DEFAULT_POOL_SIZE }}" >> .env
          echo "POOLER_MAX_CLIENT_CONN=${{ secrets.POOLER_MAX_CLIENT_CONN }}" >> .env
          echo "POOLER_TENANT_ID=${{ secrets.POOLER_TENANT_ID }}" >> .env
          echo "KONG_HTTP_PORT=${{ secrets.KONG_HTTP_PORT }}" >> .env
          echo "KONG_HTTPS_PORT=${{ secrets.KONG_HTTPS_PORT }}" >> .env
          echo "SITE_URL=${{ secrets.SITE_URL }}" >> .env
          echo "JWT_EXPIRY=${{ secrets.JWT_EXPIRY }}" >> .env
          echo "DISABLE_SIGNUP=${{ secrets.DISABLE_SIGNUP }}" >> .env
          echo "API_EXTERNAL_URL=${{ secrets.API_EXTERNAL_URL }}" >> .env
          echo "MAILER_URLPATHS_CONFIRMATION=${{ secrets.MAILER_URLPATHS_CONFIRMATION }}" >> .env
          echo "MAILER_URLPATHS_INVITE=${{ secrets.MAILER_URLPATHS_INVITE }}" >> .env
          echo "MAILER_URLPATHS_RECOVERY=${{ secrets.MAILER_URLPATHS_RECOVERY }}" >> .env
          echo "MAILER_URLPATHS_EMAIL_CHANGE=${{ secrets.MAILER_URLPATHS_EMAIL_CHANGE }}" >> .env
          echo "ENABLE_EMAIL_SIGNUP=${{ secrets.ENABLE_EMAIL_SIGNUP }}" >> .env
          echo "ENABLE_EMAIL_AUTOCONFIRM=${{ secrets.ENABLE_EMAIL_AUTOCONFIRM }}" >> .env
          echo "SMTP_ADMIN_EMAIL=${{ secrets.SMTP_ADMIN_EMAIL }}" >> .env
          echo "SMTP_HOST=${{ secrets.SMTP_HOST }}" >> .env
          echo "SMTP_PORT=${{ secrets.SMTP_PORT }}" >> .env
          echo "SMTP_USER=${{ secrets.SMTP_USER }}" >> .env
          echo "SMTP_PASS=${{ secrets.SMTP_PASS }}" >> .env
          echo "SMTP_SENDER_NAME=${{ secrets.SMTP_SENDER_NAME }}" >> .env
          echo "ENABLE_ANONYMOUS_USERS=${{ secrets.ENABLE_ANONYMOUS_USERS }}" >> .env
          echo "ENABLE_PHONE_SIGNUP=${{ secrets.ENABLE_PHONE_SIGNUP }}" >> .env
          echo "ENABLE_PHONE_AUTOCONFIRM=${{ secrets.ENABLE_PHONE_AUTOCONFIRM }}" >> .env
          echo "FUNCTIONS_VERIFY_JWT=${{ secrets.FUNCTIONS_VERIFY_JWT }}" >> .env

      - name: Build and start Docker environment
        run: |
          docker compose --env-file .env -f docker-compose-ci.yml -f ./dev/docker-compose.dev.yml up --build
